{"version":3,"file":"static/js/999.07aeb02b.chunk.js","mappings":"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","sources":["components/api/api.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'cdfc08b3296f0164149119b33e9bcc21';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport const getPopularList = async () => {\n  const { data } = await instance.get(`/trending/movie/day?api_key=${KEY}`);\n  return data;\n};\n\nexport const getMovieByName = async name => {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n  return data;\n};\nexport const getMovieById = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import { useSearchParams } from 'react-router-dom';\nimport './searchForm.css';\n\nconst SearchForm = ({ getMovie }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('search');\n\n  const handleChange = ({ target: { value } }) => {\n    value ? setSearchParams({ search: value }) : setSearchParams({});\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = searchParams.get('search');\n    getMovie(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"search_form\">\n      <input type=\"text\" onChange={handleChange} value={query || ''} />\n      <button type=\"submit\">search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getMovieByName } from 'components/api/api';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport './movies.css';\n\nconst Movies = () => {\n  const [name, setName] = useState('');\n  const [list, setList] = useState(null);\n  const [notFound, setNotFound] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchFilmByName = async () => {\n      try {\n        const result = await getMovieByName(name);\n        if (!result.results) {\n          setNotFound(true);\n        } else {\n          setNotFound(false);\n          setList(result.results);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (name) fetchFilmByName();\n  }, [name]);\n\n  const resultList =\n    list &&\n    list.map(({ id, original_title }) => {\n      return (\n        <li key={id}>\n          <Link to={`${id}`} state={{ from: location }} className=\"item\">\n            {original_title}\n          </Link>\n        </li>\n      );\n    });\n\n  function getMovie(value) {\n    setName(value);\n  }\n\n  return (\n    <div className=\"container movies\">\n      <SearchForm getMovie={getMovie} />\n      {notFound && <h2>Nothing found...</h2>}\n      {!notFound && <ol className=\"search_list\">{list && resultList}</ol>}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","instance","axios","baseURL","getPopularList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","get","concat","sent","abrupt","stop","apply","arguments","getMovieByName","_ref2","_callee2","name","_yield$instance$get2","_context2","_x","getMovieById","_ref3","_callee3","id","_yield$instance$get3","_context3","_x2","getCastById","_ref4","_callee4","_yield$instance$get4","_context4","_x3","getReviewsById","_ref5","_callee5","_yield$instance$get5","_context5","_x4","getMovie","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","_jsxs","onSubmit","e","preventDefault","className","children","_jsx","type","onChange","value","target","search","_useState","useState","_useState2","setName","_useState3","_useState4","list","setList","_useState5","_useState6","notFound","setNotFound","location","useLocation","useEffect","fetchFilmByName","result","results","t0","console","log","resultList","map","original_title","Link","to","state","from","SearchForm"],"sourceRoot":""}